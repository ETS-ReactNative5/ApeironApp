{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeQrcodeScanner = _interopRequireDefault(require(\"react-native-qrcode-scanner\"));\n\nvar _scanStyle = _interopRequireDefault(require(\"./scanStyle\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\Luna\\\\Desktop\\\\Diplomski\\\\Android\\\\android_app\\\\src\\\\pages\\\\scan.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Scan = function (_Component) {\n  (0, _inherits2.default)(Scan, _Component);\n\n  var _super = _createSuper(Scan);\n\n  function Scan(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Scan);\n    _this = _super.call(this, props);\n\n    _this.onSuccess = function (e) {\n      var check = e.data.substring(0, 4);\n      console.log('scanned data' + check);\n\n      _this.setState({\n        result: e,\n        scan: false,\n        ScanResult: true\n      });\n\n      if (check === 'http') {\n        _reactNative.Linking.openURL(e.data).catch(function (err) {\n          return console.error('An error occured', err);\n        });\n      } else {\n        _this.setState({\n          result: e,\n          scan: false,\n          ScanResult: true\n        });\n      }\n    };\n\n    _this.activeQR = function () {\n      _this.setState({\n        scan: true\n      });\n    };\n\n    _this.scanAgain = function () {\n      _this.setState({\n        scan: true,\n        ScanResult: false\n      });\n    };\n\n    _this.state = {\n      scan: false,\n      ScanResult: false,\n      result: null\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(Scan, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          scan = _this$state.scan,\n          ScanResult = _this$state.ScanResult,\n          result = _this$state.result;\n      return _react.default.createElement(_reactNative.View, {\n        style: _scanStyle.default.scrollViewStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_react.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _scanStyle.default.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: function onPress() {\n          return _reactNative.BackHandler.exitApp();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        source: require('../static/cam.png'),\n        style: {\n          height: 36,\n          width: 36\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }\n      })), _react.default.createElement(_reactNative.Text, {\n        style: _scanStyle.default.textTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, \"Scan QR Code\")), !scan && !ScanResult && _react.default.createElement(_reactNative.View, {\n        style: _scanStyle.default.cardView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        source: require('../static/cam.png'),\n        style: {\n          height: 36,\n          width: 36\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        numberOfLines: 8,\n        style: _scanStyle.default.descText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }\n      }, \"Please move your camera \", \"\\n\", \" over the QR Code\"), _react.default.createElement(_reactNative.Image, {\n        source: require('../static/cam.png'),\n        style: {\n          margin: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }\n      }), _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: this.activeQR,\n        style: _scanStyle.default.buttonScan,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _scanStyle.default.buttonWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        source: require('../static/cam.png'),\n        style: {\n          height: 36,\n          width: 36\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: (0, _extends2.default)({}, _scanStyle.default.buttonTextStyle, {\n          color: '#2196f3'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }\n      }, \"Scan QR Code\")))), ScanResult && _react.default.createElement(_react.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _scanStyle.default.textTitle1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }, \"Result\"), _react.default.createElement(_reactNative.View, {\n        style: ScanResult ? _scanStyle.default.scanCardView : _scanStyle.default.cardView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      }, \"Type : \", result.type), _react.default.createElement(_reactNative.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 33\n        }\n      }, \"Result : \", result.data), _react.default.createElement(_reactNative.Text, {\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }\n      }, \"RawData: \", result.rawData), _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: this.scanAgain,\n        style: _scanStyle.default.buttonScan,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _scanStyle.default.buttonWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 37\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        source: require('../static/cam.png'),\n        style: {\n          height: 36,\n          width: 36\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 41\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: (0, _extends2.default)({}, _scanStyle.default.buttonTextStyle, {\n          color: '#2196f3'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 41\n        }\n      }, \"Click to scan again\"))))), scan && _react.default.createElement(_reactNativeQrcodeScanner.default, {\n        reactivate: true,\n        showMarker: true,\n        ref: function ref(node) {\n          _this2.scanner = node;\n        },\n        onRead: this.onSuccess,\n        topContent: _react.default.createElement(_reactNative.Text, {\n          style: _scanStyle.default.centerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }\n        }, \"Please move your camera \", \"\\n\", \" over the QR Code\"),\n        bottomContent: _react.default.createElement(_reactNative.View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }\n        }, _react.default.createElement(_reactNative.ImageBackground, {\n          source: require('../static/cam.png'),\n          style: _scanStyle.default.bottomContent,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 37\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          style: _scanStyle.default.buttonScan2,\n          onPress: function onPress() {\n            return _this2.scanner.reactivate();\n          },\n          onLongPress: function onLongPress() {\n            return _this2.setState({\n              scan: false\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 41\n          }\n        }, _react.default.createElement(_reactNative.Image, {\n          source: require('../static/cam.png'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 45\n          }\n        })))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      })));\n    }\n  }]);\n  return Scan;\n}(_react.Component);\n\nvar _default = Scan;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Luna/Desktop/Diplomski/Android/android_app/src/pages/scan.js"],"names":["Scan","props","onSuccess","e","check","data","substring","console","log","setState","result","scan","ScanResult","Linking","openURL","catch","err","error","activeQR","scanAgain","state","styles","scrollViewStyle","header","BackHandler","exitApp","require","height","width","textTitle","cardView","descText","margin","buttonScan","buttonWrapper","buttonTextStyle","color","textTitle1","scanCardView","type","rawData","node","scanner","centerText","bottomContent","buttonScan2","reactivate","Component"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { TouchableOpacity, Text, Linking, View, Image, ImageBackground, BackHandler } from 'react-native';\r\nimport QRCodeScanner from 'react-native-qrcode-scanner';\r\nimport styles from './scanStyle'\r\nclass Scan extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            scan: false,\r\n            ScanResult: false,\r\n            result: null\r\n        };\r\n    }\r\nonSuccess = (e) => {\r\n        const check = e.data.substring(0, 4);\r\n        console.log('scanned data' + check);\r\n        this.setState({\r\n            result: e,\r\n            scan: false,\r\n            ScanResult: true\r\n        })\r\n        if (check === 'http') {\r\n            Linking.openURL(e.data).catch(err => console.error('An error occured', err));\r\n        } else {\r\n            this.setState({\r\n                result: e,\r\n                scan: false,\r\n                ScanResult: true\r\n            })\r\n        }\r\n    }\r\nactiveQR = () => {\r\n        this.setState({ scan: true })\r\n    }\r\n    scanAgain = () => {\r\n        this.setState({ scan: true, ScanResult: false })\r\n    }\r\nrender() {\r\n        const { scan, ScanResult, result } = this.state\r\n        return (\r\n            <View style={styles.scrollViewStyle}>\r\n                <Fragment>\r\n                    <View style={styles.header}>\r\n                        <TouchableOpacity onPress={()=> BackHandler.exitApp()}>\r\n                            <Image source={require('../static/cam.png')} style={{height: 36, width: 36}}></Image>\r\n                        </TouchableOpacity>\r\n                        <Text style={styles.textTitle}>Scan QR Code</Text>\r\n                    </View>\r\n                    {!scan && !ScanResult &&\r\n                        <View style={styles.cardView} >\r\n                            <Image source={require('../static/cam.png')} style={{height: 36, width: 36}}></Image>\r\n                            <Text numberOfLines={8} style={styles.descText}>Please move your camera {\"\\n\"} over the QR Code</Text>\r\n                            <Image source={require('../static/cam.png')} style={{margin: 20}}></Image>\r\n                            <TouchableOpacity onPress={this.activeQR} style={styles.buttonScan}>\r\n                                <View style={styles.buttonWrapper}>\r\n                                <Image source={require('../static/cam.png')} style={{height: 36, width: 36}}></Image>\r\n                                <Text style={{...styles.buttonTextStyle, color: '#2196f3'}}>Scan QR Code</Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    }\r\n                    {ScanResult &&\r\n                        <Fragment>\r\n                            <Text style={styles.textTitle1}>Result</Text>\r\n                            <View style={ScanResult ? styles.scanCardView : styles.cardView}>\r\n                                <Text>Type : {result.type}</Text>\r\n                                <Text>Result : {result.data}</Text>\r\n                                <Text numberOfLines={1}>RawData: {result.rawData}</Text>\r\n                                <TouchableOpacity onPress={this.scanAgain} style={styles.buttonScan}>\r\n                                    <View style={styles.buttonWrapper}>\r\n                                        <Image source={require('../static/cam.png')} style={{height: 36, width: 36}}></Image>\r\n                                        <Text style={{...styles.buttonTextStyle, color: '#2196f3'}}>Click to scan again</Text>\r\n                                    </View>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </Fragment>\r\n                    }\r\n                    {scan &&\r\n                        <QRCodeScanner\r\n                            reactivate={true}\r\n                            showMarker={true}\r\n                            ref={(node) => { this.scanner = node }}\r\n                            onRead={this.onSuccess}\r\n                            topContent={\r\n                                <Text style={styles.centerText}>\r\n                                   Please move your camera {\"\\n\"} over the QR Code\r\n                                </Text>\r\n                            }\r\n                            bottomContent={\r\n                                <View>\r\n                                    <ImageBackground source={require('../static/cam.png')} style={styles.bottomContent}>\r\n                                        <TouchableOpacity style={styles.buttonScan2} \r\n                                            onPress={() => this.scanner.reactivate()} \r\n                                            onLongPress={() => this.setState({ scan: false })}>\r\n                                            <Image source={require('../static/cam.png')}></Image>\r\n                                        </TouchableOpacity>\r\n                                    </ImageBackground>\r\n                                </View>\r\n                            }\r\n                        />\r\n                    }\r\n                </Fragment>\r\n            </View>\r\n        );\r\n    }\r\n}\r\nexport default Scan;"]},"metadata":{},"sourceType":"script"}